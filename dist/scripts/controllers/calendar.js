// Generated by CoffeeScript 1.7.1
(function() {
  'use strict';
  angular.module('hiin').controller('calendarCtrl', function($scope, $rootScope, $window, $dialogs, socket, Util) {
    angular.element("#cirClock").tzineClock(new Date());
    $scope.uiConfig = {
      calendar: {
        editable: true,
        header: {
          left: 'title',
          center: '',
          right: 'today prev,next'
        },
        eventClick: function(event) {
          var da, sendData;
          if (event.type === "applyForm") {
            sendData = {
              _id: event._id
            };
            return socket.emit('apply', sendData);
          } else {
            da = "정말로\"" + event.title + "\"를 삭제하시겠습니까?";
            sendData = {
              _id: event._id
            };
            return BootstrapDialog.show({
              title: '확인',
              message: da,
              buttons: [
                {
                  label: '삭제',
                  cssClass: 'btn-primary',
                  action: function(dialogItself) {
                    socket.emit('deleteEvent', sendData);
                    return dialogItself.close();
                  }
                }, {
                  label: '취소',
                  action: function(dialogItself) {
                    return dialogItself.close();
                  }
                }
              ]
            });
          }
        }
      }
    };
    $scope.eventSources = [];
    socket.emit('eventList');
    socket.on('eventList', function(data) {
      return $scope.events = data;
    });
    socket.on('loadEventInfo', function(data) {
      console.log(data);
      $scope.eventInfo = data;
      console.log($scope.eventInfo);
      return console.log($scope.eventInfo.priorMin);
    });
    socket.on('serverTime', function(data) {
      console.log(data);
      angular.element("#cirClock").empty();
      return angular.element("#cirClock").tzineClock(new Date(data));
    });
    socket.on('loadCases', function(data) {
      $scope.eventSources.splice(0, $scope.eventSources.length);
      $scope.eventSources.push(data.events);
      $scope.eventSources.push(data.results);
      $scope.count = data.num;
      return $scope.max = data.max;
    });
    socket.on('alert', function(data) {
      socket.emit('loadCases', $scope.currentEventId);
      return BootstrapDialog.show({
        type: BootstrapDialog.TYPE_WARNING,
        title: '경고',
        message: data,
        buttons: [
          {
            label: '확인',
            action: function(dialogItself) {
              return dialogItself.close();
            }
          }
        ]
      });
    });
    socket.on('applyOk', function(data) {
      socket.emit('loadCases', $scope.currentEventId);
      return BootstrapDialog.show({
        type: BootstrapDialog.TYPE_SUCCESS,
        title: '확인',
        message: data,
        buttons: [
          {
            label: '확인',
            action: function(dialogItself) {
              return dialogItself.close();
            }
          }
        ]
      });
    });
    $scope.loadEvent = function(event) {
      $scope.currentEventName = event.name;
      $scope.currentEventId = event._id;
      socket.emit('loadCases', event._id);
      return socket.emit('loadEventInfo', event._id);
    };
    $scope.userName = localStorage.loginUserName || sessionStorage.loginUserName;
    $scope.clockRe = function() {
      return socket.emit('serverTime');
    };
    return $scope.logout = function() {
      Util.makeReq('get', 'logout').success(function(data) {
        if (data !== 'success logout') {
          alert(data);
          return;
        }
        return Util.Go('/');
      }).error(function(error, status) {
        return console.log("$http.error");
      });
      sessionStorage.removeItem("logined");
      sessionStorage.removeItem("loginUserName");
      sessionStorage.removeItem("loginUserStNum");
      sessionStorage.removeItem("loginUserNumber");
      sessionStorage.removeItem("loginUserObjid");
      localStorage.removeItem("logined");
      localStorage.removeItem("loginUserName");
      localStorage.removeItem("loginUserStNum");
      localStorage.removeItem("loginUserNumber");
      localStorage.removeItem("loginUserObjid");
      return console.log("logout");
    };
  });

}).call(this);
